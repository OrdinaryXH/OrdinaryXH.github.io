[{"title":"GSI相关知识","url":"/2023/07/21/GSI%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/","content":"本文旨在帮助小白认识与GSI相关的知识，可能有一些不严谨的地方，欢迎联系指正。\n前言本文默认你已掌握以下内容\n\n了解BL，Recovery等基本概念\n装好驱动并有ADB环境\n有刷机经验，一定要会救砖\n\n下面让我们开始吧\n正文以下是一些术语，本文在叙述中使用简称：\n\n\n\n简称\n全称\n释义\n\n\n\nGSI\nGeneric System Image\n通用系统映像\n\n\nVNDK\nVendor Native Development Kit\n供应商原生开发套件\n\n\nPT\nProject Treble\n暂无，欢迎补充\n\n\nGSI俗称通刷包，一般是一个后缀名为img的system镜像。GSI主要分为两种，一种是从源码编译，另一种是移植其他机型的刷机包。前者多为类原生，且更好开。\n底包GSI只提供system镜像，其它分区则由底包提供。底包一般是官方系统的全量包，也可以选择民间大神编译的类原生。\nPT这是Android 8.0的一项新元素，分为官方和土制，它将底层软件与系统框架分离开来。这样，厂商只需更新Android操作系统框架，即可直接提供新版本。这不仅方便了厂商更新系统，也促进了GSI的出现。因此，支持PT是刷写GSI的必要条件。你可以运行以下命令来检测是否支持：\nadb shell getprop ro.treble.enabled\n如果输出为true，则表示支持。\nVNDK对此，谷歌的文档写得很复杂，我也看不懂。我们只需要知道，VNDK与PT相关，且VNDK的版本对应Android版本的API，如VNDK29对应Android10，以此类推。GSI的版本不能低于VNDK的版本，如果设备不完全兼容VNDK，就只能使用与底包版本相同的GSI。\n分区目前Android的分区有5种，分别是：\n\nonlyA\nAB\nonlyA动态分区\nAB动态分区\nVAB\n\n它们之间的差异可以看看酷安大佬Rannki的文章，我只接触过onlyA和VAB，后续的实践也只会涉及这两种。\nCPU架构运行以下命令：\nadb shell getprop ro.product.cpu.abi\n输出为arm64-v8a或x86_64为64位的CPU，其他输出基本是32位的。\n总结刷GSI的条件：\n\n有手和脑子\n解锁BL\n支持PT\n\nGSI的选择：\n\n不低于底包，至少不低于VNDK\n符合CPU架构\n以及其它(下期一定)\n\n","categories":["刷机"],"tags":["GSI"]},{"title":"如何在Markdown中嵌入本地图片","url":"/2023/07/26/%E5%A6%82%E4%BD%95%E5%9C%A8Markdown%E4%B8%AD%E5%B5%8C%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/","content":"前言相信大家在用Hexo搭建博客时都遇到过这样一个问题，明明已经在Markdown中指定了本地图片的路径，在编辑器内预览也正常，可在网页中就显示不出来了呢。别急，今天就教你解决这个问题。\n正文首先，编辑_config.yml，其中后三行需要自行添加。\npost_asset_folder: truemarked:  prependRoot: true  postAsset: true\n接着来测试一下：\nhexo n &quot;Test&quot;\n你会发现_posts文件夹下多了一个与文章名称相同的文件夹，将你需要的图片放进去，接着编辑Test.md，示例：\n![](image.jpg)\n\n注意，这里不需要指定图片的路径\n\n效果如下\n代价是不能在编辑器内预览\n其他参考文档\n","categories":["Hexo"],"tags":["Markdown"]}]